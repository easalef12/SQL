# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- SELECT *
FROM BIT_DB.Spotifydata;

-- Who are the top 10 artists based on popularity?

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

--  What artist has the most songs in the top 50?
SELECT artist_name, COUNT (*) as Occurence
FROM BIT_DB.Spotifydata
GROUP BY artist_name 
HAVING COUNT(*) >1
ORDER BY Occurence desc;

-- what is the average length of the top 20 songs?

SELECT AVG(Duration_ms/100000) as 'AVG song length'
FROM BIT_DB.Spotifydata
WHERE ID <= 20;

-- what is the coorelation between dancebility and popularity?

SELECT id, artist_name, track_name, popularity,
CASE WHEN danceability >= .8 THEN 'GREAT'
WHEN danceability >= .6 THEN 'GOOD'
WHEN danceability >= .4 THEN 'SLOW'
WHEN danceability >= .2 THEN 'BORING'
ELSE 'SUCKS'
END AS 'VIBE CHECK'
FROM BIT_DB.Spotifydata
ORDER BY popularity desc;

 -- CTE PRACTICE: Calculating the average popularity for the artists in the Spotify data table. 
 -- Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
 
WITH avg_popularity_temp AS (
SELECT SD.artist_name,
AVG(SD.popularity) AS average_popularity
FROM SpotifyData SD 
GROUP BY SD.artist_name
)
 
SELECT      artist_name,
            average_popularity,
            'Top Star' AS tag
FROM avg_popularity_temp
WHERE average_popularity>=90;
